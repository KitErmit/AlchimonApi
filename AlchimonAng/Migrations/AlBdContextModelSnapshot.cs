// <auto-generated />
using System;
using AlchimonAng.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlchimonAng.Migrations
{
    [DbContext(typeof(AlBdContext))]
    partial class AlBdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlchimonAng.Models.Alchemon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Agi")
                        .HasColumnType("integer");

                    b.Property<string>("AlName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Dmg")
                        .HasColumnType("integer");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Hp")
                        .HasColumnType("integer");

                    b.Property<int>("Lvl")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Noise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NxtLvlXp")
                        .HasColumnType("integer");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tear")
                        .HasColumnType("integer");

                    b.Property<int>("Xp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PlayerId");

                    b.ToTable("Alchemons");
                });

            modelBuilder.Entity("AlchimonAng.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("Money")
                        .HasColumnType("integer");

                    b.Property<string>("Nik")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AlchimonAng.Models.Alchemon", b =>
                {
                    b.HasOne("AlchimonAng.Models.Player", "Player")
                        .WithMany("Karman")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("AlchimonAng.Models.Player", b =>
                {
                    b.Navigation("Karman");
                });
#pragma warning restore 612, 618
        }
    }
}
